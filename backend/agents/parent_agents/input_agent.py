from backend.agents.base_agent import BaseAgent
from backend.config.logger import logger


class InputAgent(BaseAgent):

    def __init__(
        self,
        model_name,
        temperature,
        max_tokens,
        inputs,
    ):
        self.shared_state_key = "ba_workflow"
        self.agent_name = "InputAgent"
        state = self.redis_client.get_shared_state(self.shared_state_key)
        dev_msg = """
            You are an input validation agent in a software development team, 
            tasked with validating user inputs to pass on to the 
            Business Analyst Agent. 
            """
        user_msg = f"""
            These are the inputs provided by the user: {inputs}\n
            Your task is to check if the inputs are valid and can be used to 
            generate requirements for the Business Analyst Agent.
            Ensure that all inputs are correctly captured, concise and 
            correctly formatted.\n
            Please take into account any other feedback if available here: {state.get("feedback", "")}
            """
        super().__init__(
            model_name=model_name,
            temperature=temperature,
            dev_msg=dev_msg,
            user_msg=user_msg,
            max_tokens=max_tokens,
        )

    def process(self) -> str:
        """
        Generate inputs based on user inputs

        Returns:
            str: The code generated by the LLM.
        """
        logger.info("Processing inputs for Input Agent...\n")
        response = self.llm.generate_response()
        logger.info(f"Response for {self.agent_name}: {response}")
        self.redis_client.save_to_shared_state(
            agent_name=self.agent_name,
            shared_state_key=self.shared_state_key,
            data=response,
        )
        return response
